{"version":3,"sources":["components/Layout/Header/Header.js","components/UI/Button/Button.js","components/UI/ProgressBar/ProgressBar.js","utilities/getData.js","components/UI/Table/Table.js","components/Layout/Main/Main.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["NavbarPage","state","isOpen","toggleCollapse","setState","color","dark","expand","className","href","src","alt","style","height","onClick","this","id","navbar","right","Component","Button","props","click","icon","value","ProgressBar","role","words","getRandomWords","i","Math","floor","random","length","results","columns","label","field","sort","rows","score","date","Date","toDateString","Table","data","push","striped","bordered","hover","Main","defaultDefaultSettings","useRef","default","timer","useState","typedWord","setTypedWord","currentWord","setCurrentWord","current","countdown","setCountDown","setWords","frappesCorrect","setFrappesCorrect","frappesIncorrect","setFrappesIncorrect","startedTest","setStartedTest","finishedTest","setFinishedTest","correctWords","setCorrectWords","wrongWords","setWrongWords","correctWordsIndexes","setCorrectWordsIndexes","wrongWordsIndexes","setWrongWordsIndexes","countdowntimer","countWords","startTest","window","clearInterval","setInterval","display","flexDirection","alignItems","justifyContent","padding","width","backgroundColor","fontWeight","borderRadius","map","word","index","classes","indexOf","key","disabled","onChange","event","target","onKeyDown","console","log","keyCode","preventDefault","currentValues","slice","checkWord","ceil","toFixed","marginBottom","Layout","Header","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03cc38a0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBBtn } from \"mdbreact\";\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\nrender() {\r\n  return (\r\n      <MDBNavbar color=\"elegant-color\" dark expand=\"md\">\r\n          <div className=\"container\">\r\n          <MDBNavbarBrand>\r\n            <a href=\"/\"><img src=\"images/arckade-logo.png\" alt=\"logo\" style={{\r\n                height: '55px'\r\n\r\n            }}/></a>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n                <MDBBtn color=\"grey\">Retour au site</MDBBtn>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n          </div>\r\n      </MDBNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React from \"react\";\r\nimport {MDBBtn, MDBIcon} from \"mdbreact\";\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <div style={{\r\n            ...props.style\r\n        }}>\r\n           <MDBBtn color={props.color} onClick={props.click} >\r\n               <MDBIcon className=\"mr-2\" icon={props.icon} />\r\n               <strong>{props.value}</strong>\r\n            </MDBBtn>\r\n        </div>\r\n    );\r\n};\r\nexport default Button;","import React from \"react\";\r\n\r\nconst ProgressBar = ({style}) => {\r\n    return (\r\n        <div className=\"progress md-progress\">\r\n            <div className=\"progress-bar\" role=\"progressbar\" style={style}></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProgressBar;","const words = [\r\n    \"open\",\"seem\",\"together\",\"next\",\"white\",\"children\",\"begin\",\"got\",\"walk\",\"example\",\"ease\",\"paper\",\"group\",\"always\",\"music\",\"those\",\"both\",\"mark\",\"often\",\"letter\",\"until\",\"mile\",\r\n        \"river\",\"car\",\"feet\",\"care\",\"second\",\"book\",\"carry\",\"took\",\"science\",\"eat\",\"room\",\"friend\",\"began\",\"idea\",\"fish\",\"mountain\",\"stop\",\"once\",\"base\",\"hear\",\"horse\",\"cut\",\"sure\",\"watch\",\r\n        \"color\",\"face\",\"wood\",\"main\",\"enough\",\"plain\",\"girl\",\"usual\",\"young\",\"ready\",\"above\",\"ever\",\"red\",\"list\",\"though\",\"feel\",\"talk\",\"bird\",\"soon\",\"body\",\"dog\",\"family\",\"direct\",\"pose\",\r\n        \"leave\",\"song\",\"measure\",\"door\",\"product\",\"black\",\"short\",\"numeral\",\"class\",\"wind\",\"question\",\"happen\",\"complete\",\"ship\",\"area\",\"half\",\"rock\",\"order\",\"fire\",\"south\",\"problem\",\"piece\",\r\n        \"told\",\"knew\",\"pass\",\"since\",\"top\",\"whole\",\"king\",\"space\",\"heard\",\"best\",\"hour\",\"better\",\"true\",\"during\",\"hundred\",\"five\",\"remember\",\"step\",\"early\",\"hold\",\"west\",\"ground\",\"interest\",\r\n        \"reach\",\"fast\",\"verb\",\"sing\",\"listen\",\"six\",\"table\",\"travel\",\"less\",\"morning\",\"ten\",\"simple\",\"several\",\"vowel\",\"toward\",\"war\",\"lay\",\"against\",\"pattern\",\"slow\",\"center\",\"love\",\"person\",\r\n        \"money\",\"serve\",\"appear\",\"road\",\"map\",\"rain\",\"rule\",\"govern\",\"pull\",\"cold\",\"notice\",\"voice\",\"unit\",\"power\",\"town\",\"fine\",\"certain\",\"fly\",\"fall\",\"lead\",\"cry\",\"dark\",\"machine\",\"note\",\r\n        \"wait\",\"plan\",\"figure\",\"star\",\"box\",\"noun\",\"field\",\"rest\",\"correct\",\"able\",\"pound\",\"done\",\"beauty\",\"drive\",\"stood\",\"contain\",\"front\",\"teach\",\"week\",\"final\",\"gave\",\"green\",\"oh\",\"quick\",\r\n        \"develop\",\"ocean\",\"warm\",\"free\",\"minute\",\"strong\",\"special\",\"mind\",\"behind\",\"clear\",\"tail\",\"produce\",\"fact\",\"street\",\"inch\",\"multiply\",\"nothing\",\"course\",\"stay\",\"wheel\",\"full\",\"force\",\r\n        \"blue\",\"object\",\"decide\",\"surface\",\"deep\",\"moon\",\"island\",\"foot\",\"system\",\"busy\",\"test\",\"record\",\"boat\",\"common\",\"gold\",\"possible\",\"plane\",\"stead\",\"dry\",\"wonder\",\"laugh\",\"thousand\",\r\n        \"ago\",\"ran\",\"check\",\"game\",\"shape\",\"equate\",\"hot\",\"miss\",\"brought\",\"heat\",\"snow\",\"tire\",\"bring\",\"yes\",\"distant\",\"fill\",\"east\",\"paint\",\"language\",\"among\",\"grand\",\"ball\",\"yet\",\"wave\",\r\n        \"drop\",\"heart\",\"am\",\"present\",\"heavy\",\"dance\",\"engine\",\"position\",\"arm\",\"wide\",\"sail\",\"material\",\"size\",\"vary\",\"settle\",\"speak\",\"weight\",\"general\",\"ice\",\"matter\",\"circle\",\"pair\",\r\n        \"include\",\"divide\",\"syllable\",\"felt\",\"perhaps\",\"pick\",\"sudden\",\"count\",\"square\",\"reason\",\"length\",\"represent\",\"art\",\"subject\",\"region\",\"energy\",\"hunt\",\"probable\",\"bed\",\"brother\",\r\n        \"egg\",\"ride\",\"cell\",\"believe\",\"fraction\",\"forest\",\"sit\",\"race\",\"window\",\"store\",\"summer\",\"train\",\"sleep\",\"prove\",\"lone\",\"leg\",\"exercise\",\"wall\",\"catch\",\"mount\",\"wish\",\"sky\",\"board\",\r\n        \"joy\",\"winter\",\"sat\",\"written\",\"wild\",\"instrument\",\"kept\",\"glass\",\"grass\",\"cow\",\"job\",\"edge\",\"sign\",\"visit\",\"past\",\"soft\",\"fun\",\"bright\",\"gas\",\"weather\",\"month\",\"million\",\"bear\",\r\n        \"finish\",\"happy\",\"hope\",\"flower\",\"clothe\",\"strange\",\"gone\",\"jump\",\"baby\",\"eight\",\"village\",\"meet\",\"root\",\"buy\",\"raise\",\"solve\",\"metal\",\"whether\",\"push\",\"seven\",\"paragraph\",\"third\",\r\n        \"shall\",\"held\",\"hair\",\"describe\",\"cook\",\"floor\",\"either\",\"result\",\"burn\",\"hill\",\"safe\",\"cat\",\"century\",\"consider\",\"type\",\"law\",\"bit\",\"coast\",\"copy\",\"phrase\",\"silent\",\"tall\",\"sand\",\r\n        \"soil\",\"roll\",\"temperature\",\"finger\",\"industry\",\"value\",\"fight\",\"lie\",\"beat\",\"excite\",\"natural\",\"view\",\"sense\",\"ear\",\"else\",\"quite\",\"broke\",\"case\",\"middle\",\"kill\",\"son\",\"lake\",\"moment\",\r\n        \"scale\",\"loud\",\"spring\",\"observe\",\"child\",\"straight\",\"consonant\",\"nation\",\"dictionary\",\"milk\",\"speed\",\"method\",\"organ\",\"pay\",\"age\",\"section\",\"dress\",\"cloud\",\"surprise\",\"quiet\",\r\n        \"stone\",\"tiny\",\"climb\",\"cool\",\"design\",\"poor\",\"lot\",\"experiment\",\"bottom\",\"key\",\"iron\",\"single\",\"stick\",\"flat\",\"twenty\",\"skin\",\"smile\",\"crease\",\"hole\",\"trade\",\"melody\",\"trip\",\r\n        \"office\",\"receive\",\"row\",\"mouth\",\"exact\",\"symbol\",\"die\",\"least\",\"trouble\",\"shout\",\"except\",\"wrote\",\"seed\",\"tone\",\"join\",\"suggest\",\"clean\",\"break\",\"lady\",\"yard\",\"rise\",\"bad\",\"blow\",\r\n        \"oil\",\"blood\",\"touch\",\"grew\",\"cent\",\"mix\",\"team\",\"wire\",\"cost\",\"lost\",\"brown\",\"wear\",\"garden\",\"equal\",\"sent\",\"choose\",\"fell\",\"fit\",\"flow\",\"fair\",\"bank\",\"collect\",\"save\",\"control\"\r\n];\r\n\r\n// FUNC: getRandomWord()\r\n    // SELECT A RANDOM NUMBER BETWEEN 0 & THE AMOUNT OF WORDS LISTED IN THE WORDS ARRAY.\r\n    // USES THAT RANDOM NUMBER TO SELECT AN ARRAY ITEM\r\nconst getRandomWord = () => {\r\n        return words[Math.floor(Math.random() * words.length)];\r\n    }\r\n\r\n    // FUNC: getRandomWords()\r\n    // USED TO GENERATE AN ARRAY OF WORDS TO TYPE - USES THE getRandomWord() FUNCTION TO ASSIGN EACH ARRAY ITEM\r\nexport const getRandomWords = () => {\r\n        const words = [];\r\n        for(var i = 0; i < 200; i++)\r\n        {\r\n            words[i] = getRandomWord();\r\n        }\r\n        return words;\r\n}\r\n\r\nexport const results = {\r\n    columns: [\r\n        {\r\n            label: 'Score',\r\n            field: 'score',\r\n            sort: 'desc',\r\n        },\r\n        {\r\n            label: 'Date',\r\n            field: 'date',\r\n        },\r\n    ],\r\n    rows: [\r\n        {\r\n            score: 45,\r\n            date: new Date().toDateString(),\r\n        },\r\n        {\r\n            score: 45,\r\n            date: new Date().toDateString(),\r\n        },\r\n        {\r\n            score: 45,\r\n            date: new Date().toDateString(),\r\n        },\r\n        {\r\n            score: 45,\r\n            date: new Date().toDateString(),\r\n        },\r\n        {\r\n            score: 45,\r\n            date: new Date().toDateString(),\r\n        }\r\n    ]\r\n};\r\n","import React from \"react\";\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport { results } from \"../../../utilities/getData\";\r\n\r\nconst Table = props => {\r\n    const data = results;\r\n    data.rows.push({\r\n        score: props.score,\r\n        date: props.date \r\n    });\r\n\r\n    return (\r\n        <>\r\n            <h2>Derniers scores</h2>\r\n            <MDBDataTable  striped\r\n            bordered\r\n            hover\r\n            data={data} />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Table;","import React, { useState, useRef } from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport ProgressBar from \"../../UI/ProgressBar/ProgressBar\";\r\nimport { getRandomWords } from \"../../../utilities/getData\";\r\nimport './Main.css';\r\nimport Table from \"../../UI/Table/Table\";\r\n\r\nconst Main = (props) => {\r\n    const defaultDefaultSettings = useRef({\r\n        default: 60,\r\n        timer: 60\r\n    });\r\n    const [typedWord, setTypedWord] = useState('');\r\n    const [currentWord, setCurrentWord] = useState(0);\r\n    const [countdown, setCountDown] = useState(defaultDefaultSettings.current.timer);\r\n    const [words, setWords] = useState(getRandomWords());\r\n    const [frappesCorrect, setFrappesCorrect] = useState(0);\r\n    const [frappesIncorrect, setFrappesIncorrect] = useState(0);\r\n    const [startedTest, setStartedTest] = useState(true);\r\n    const [finishedTest, setFinishedTest] = useState(false);\r\n    const [correctWords, setCorrectWords] = useState(0);\r\n    const [wrongWords, setWrongWords] = useState(0);\r\n    const [correctWordsIndexes, setCorrectWordsIndexes] = useState([]);\r\n    const [wrongWordsIndexes, setWrongWordsIndexes] = useState([]);\r\n    const countdowntimer = useRef(null);\r\n    const countWords = useRef(0);\r\n\r\n    const handleTypedWord = (event) => {\r\n        setTypedWord(event.target.value);\r\n    };\r\n\r\n    const finishTest = () => {\r\n        window.clearInterval(countdowntimer.current);\r\n        setStartedTest(false);\r\n        setFinishedTest(true);\r\n    }\r\n\r\n    const startTest = () => {\r\n        setStartedTest(true);\r\n        window.clearInterval(countdowntimer.current);\r\n        countdowntimer.current = setInterval(() => {\r\n            defaultDefaultSettings.current.timer--;\r\n            setCountDown(defaultDefaultSettings.current.timer);\r\n            if(defaultDefaultSettings.current.timer === 0) {\r\n                finishTest()\r\n            }\r\n        }, 1000);\r\n\r\n    };\r\n\r\n    const checkWord = event => {\r\n        event.preventDefault();\r\n        if (typedWord === words[currentWord]) {\r\n            setCorrectWords(current => current + 1);\r\n            setFrappesCorrect(current => current + words[currentWord].length + 1);\r\n            setCorrectWordsIndexes(currentValues => {\r\n                currentValues.push(currentWord);\r\n                return currentValues;\r\n            })\r\n        } else {\r\n            setWrongWords(current => current + 1);\r\n            setFrappesIncorrect(current => current + words[currentWord].length + 1);\r\n            setWrongWordsIndexes(currentValues => {\r\n                currentValues.push(currentWord);\r\n                return currentValues;\r\n            })\r\n        }\r\n        setCurrentWord(current => current + 1);\r\n        countWords.current++;\r\n        setTypedWord(\"\");\r\n        if (countWords.current >= 15) {\r\n            setWords(words.slice(countWords.current));\r\n            countWords.current = 0;\r\n            setCurrentWord(countWords.current);\r\n            setCorrectWordsIndexes([]);\r\n            setWrongWordsIndexes([]);\r\n        }\r\n\r\n    };\r\n\r\n    const handleKeyPress = event => {\r\n        console.log(defaultDefaultSettings.current);\r\n        if(startedTest) {\r\n            startTest();\r\n            setStartedTest(false);\r\n        }\r\n        if (event.keyCode === 32) {\r\n            checkWord(event);\r\n        }\r\n    };\r\n\r\n    const restart = () => {\r\n        clearInterval(countdowntimer.current);\r\n        setCurrentWord(0);\r\n        defaultDefaultSettings.current = {\r\n            default: 60,\r\n            timer: 60,\r\n        }\r\n        setCountDown(defaultDefaultSettings.current.default);\r\n        setStartedTest(true);\r\n        setFinishedTest(false);\r\n        setFrappesIncorrect(0);\r\n        setFrappesCorrect(0);\r\n        setCorrectWords(0);\r\n        setWrongWords(0);\r\n        setCorrectWordsIndexes([]);\r\n        setWrongWordsIndexes([]);\r\n        setWords(getRandomWords());\r\n        setTypedWord(\"\");\r\n        countWords.current = 0;\r\n    };\r\n\r\n    const style = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container\">\r\n                <div style = {{\r\n                    ...style,\r\n                    justifyContent: 'flex-start',\r\n                    padding: '40px 0',\r\n                }}>\r\n                    <h1>Typing Test MPM</h1>\r\n                </div>\r\n                <ProgressBar style={{\r\n                    width: '100%',\r\n                    backgroundColor: \"#ff4444\"}} />\r\n                <div style={{\r\n                    width: '100%',\r\n                    backgroundColor: \"#2E2E2E\",\r\n                    color: 'white',\r\n                    fontWeight: 'bold',\r\n                    height: '70px',\r\n                    borderRadius: '5px',\r\n                    padding: '20px 0 20px 10px',\r\n                }}>\r\n                    Typing Test - ..........................................\r\n                </div>\r\n                <div className=\"words\">\r\n                    {\r\n                        words.map((word, index) => {\r\n                            let classes = \"word\";\r\n                            if (currentWord === index) {\r\n                                classes = \"word active\";\r\n                            } else if (wrongWordsIndexes.indexOf(index) !== -1) {\r\n                                classes = \"word incorrect\";\r\n                            } else if (correctWordsIndexes.indexOf(index) !== -1) {\r\n                                classes = \"word correct\";\r\n                            }\r\n                            return <div key={index} className={classes}>\r\n                                {word}\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                <div style={{\r\n                        ...style,\r\n                        justifyContent: 'space-between',\r\n                        width: '100%'\r\n                    }}>\r\n                    <div style={{\r\n                        width: '68%'\r\n                    }}>\r\n                        <input label=\"Recopiez le mot ici\" disabled={finishedTest} \r\n                        onChange={handleTypedWord} value={typedWord} onKeyDown={handleKeyPress}\r\n                        />\r\n                    </div>\r\n                    <Button style={{width: '13%'}} \r\n                    color={\"elegant\"} icon={\"clock\"} \r\n                    value={countdown === 60 ? \"01:00\" : \"00:\" + (countdown >= 10 ? countdown : \"0\" + countdown)} />\r\n                    <Button style={{width: '20%'}} click={() => restart()} color={\"blue-grey\"} icon={\"sync\"} value={\"Recommencer ?\"} />\r\n                        \r\n                </div>\r\n                {\r\n                    finishedTest ? <div style={{\r\n                        ...style,\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'none',\r\n                        width: '100%'\r\n                    }}>\r\n                        <div style={{\r\n                            width: '65%',\r\n                        }}>\r\n                            <div style={{\r\n                                backgroundColor: '#2E2E2E',\r\n                                fontWeight: 'bold',\r\n                                color: 'white',\r\n                                padding: '20px 0 20px 15px',\r\n                                borderRadius: '5px 5px 0 0'\r\n                            }}>\r\n                                Résultat\r\n                            </div>\r\n                            <div style={{\r\n                                backgroundColor: '#ccc',\r\n                                fontWeight: 'bold',\r\n                                padding: '20px 0 20px 60px',\r\n                            }}>\r\n                                <h4>{Math.ceil((((frappesCorrect + frappesIncorrect) - (wrongWords * 6))) / (defaultDefaultSettings.current.default * 6 / 60))} MPM (mots par minute)</h4>\r\n                                <table className=\"result\">\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>Frappes</td>\r\n                                        <td>({frappesCorrect}|{frappesIncorrect}) {frappesCorrect + frappesIncorrect}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Précision</td>\r\n                                        <td>{((1 - (frappesIncorrect/(frappesIncorrect + frappesCorrect))) * 100).toFixed(2)} %</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Mots corrects</td>\r\n                                        <td>{correctWords}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Mots incorrects</td>\r\n                                        <td style={{\r\n                                            color: \"red\",\r\n                                            fontWeight: 'bold'\r\n                                        }}>{wrongWords}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                    \r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{\r\n                            width: '32%',\r\n                            backgroundColor: 'blue'\r\n                        }}>\r\n                           Publicité\r\n                        </div>\r\n                    </div>\r\n                     : null\r\n                }\r\n                <hr />\r\n                {\r\n                    !finishedTest ? <div className=\"mt-3\" style={{\r\n                        backgroundColor: '#ff4444',\r\n                        color: 'white',\r\n                        borderRadius: '5px',\r\n                        marginBottom: '20px'\r\n                    }}>\r\n                        <div style={{\r\n                            color: 'white',\r\n                            padding: '5px 0 0 15px',\r\n                        }}>\r\n                            Header\r\n                            <hr/>\r\n                        </div>\r\n                        <div style={{\r\n                                padding: '20px 0 20px 15px' \r\n                            }}>\r\n                            Content\r\n                        </div>\r\n                    </div> : <Table score={Math.ceil((((frappesCorrect + frappesIncorrect) - (wrongWords * 6))) / (defaultDefaultSettings.current.default * 6 / 60))} \r\n                     date={(new Date()).toDateString()}/>\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default (Main);","import React from \"react\";\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nconst Layout = props => {\r\n    return (\r\n        <>\r\n         <Header />\r\n         <Main />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}